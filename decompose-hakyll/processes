DECOMPOSE_PROCESSES=( 'start_nginx_proxy' 'deploy')

_decompose-process-start_nginx_proxy() {
  docker run -d -p 80:80 -e DEFAULT_HOST="$PROJECT_NGINX_DEFAULT_HOST" -v /var/run/docker.sock:/tmp/docker.sock:ro jwilder/nginx-proxy
}
_decompose-process-start_nginx_proxy_help() {
  echo "  Start nginx-proxy which can host multiple sites" 
}

# Deploy production site
_decompose-process-deploy() {
  echo "Beginning the deploy process"
  
  # Build DEVELOPMENT version first so the static files exist
  echo "Building static content..."
  decompose-process-templates 
  docker-compose build
  docker-compose up -d build

  # Set to "production"
  export PROJECT_ENVIRONMENT="production"; decompose-post-process-elements

  # Build templates in 'production' mode
  decompose-process-templates
 
  # Set production server 
  eval "$(docker-machine env $PROJECT_PRODUCTION_SERVER)"

  # Build containers
  echo "Building containers on remote server. This might take awhile..."
  # Rebuild source to prevent old source files floating around
  docker-compose rm -f source
  docker-compose build
  echo "Starting containers on remote server. This might take awhile..."
  docker-compose up -d
}
_decompose-process-deploy_help() {
  echo "  Deploy production with the current code"
}

# vim:syntax=sh
